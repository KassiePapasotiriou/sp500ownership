[["index.html", "Exploration of the S&amp;P 500 stock ownership in Robinhood between Aug 2018 - Aug 2020 Chapter 1 Introduction", " Exploration of the S&amp;P 500 stock ownership in Robinhood between Aug 2018 - Aug 2020 Jingwen Du, Kassiani Papasotiriou 2020-12-15 Chapter 1 Introduction For the final project we are looking to explore any patterns in stock ownership on the financial app Robinhood. Robinhood is an investment app focused on retail investors. In particular, retail investors have significantly increased their usage and presence on Robinhood amid the post-COVID market volatility. This spurred heightened focus and attention by news reports and financial institutions to see if there’s any insight we can see from these retail involvement in the stock market. "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources We used three main sources for the data in this research project. We use the Robintrack website1 to get the ownership data from Robinhood. This data is pulled from the Robinhood API which provides this data for free to the world. It provides a csv file for each ticker and documents the number of unique accounts holding at least one share of the stock from May 2018 to August 2020. As per the source, the data was collected from the Robinhood API once per hour. We will refer to the number of unique accounts holding at least one share of the stock as “ownership” and is a indicator of a stock’s “popularity” among Robinhood users. This only includes accounts that have normal long shares and do not impact any impacts from options. Note as publicly disclosed on various news articles, Robinhood stopped making this information public in August 2020 so our dataset ends in 8/1/2020. In addition, we scrapped Yahoo Finance to get the stock price and trading volume of each company during the corresponding time period. As we will expand on in the “Missing Data” section, we discovered that Yahoo Finance has some bugs where it does not have information over a certain periods of time for certain companies but these glitches were few and far in-between. Lastly, we pulled the market capitalization of all the companies in the S&amp;P500, daily VIX and companies characteristics from Bloomberg during the relevant time period. Both Yahoo Finance and Bloomberg are credited sources commonly used in the finance industry. https://robintrack.net/data-download↩ "],["data-transformation.html", "Chapter 3 Data transformation 3.1 Raw data 3.2 Further preprocessing 3.3 Results dataframes", " Chapter 3 Data transformation In this Chapter we will go over the data transformations that we performed in order to combine the different data sources into one. We performed the data cleaning in four Python notebooks that can be found under the docs/data/preprocessing folder. Here we will provide an overview of what we have done. Please take a look at the notebooks if you need further detail. 3.1 Raw data In this section we will briefly describe how we transformed the raw data 3.1.1 Robintrack data As we mentioned in the Data Sources section, we got the number of users holding each company stock per day from Robintrack. The Robintrack data came in a folder that contained a csv for each company ticker. We read each csv, selected the data for August 2018 - August 2020 and combined them to a dataframe with the following columns: Date, Sybol, users_holding. Code can be found here data/preprocessing/Robintrack.ipynb. 3.1.2 S&amp;P500 stock prices and volume Furthermore, we got the daily Closing Price and the total Volume traded between August 2018 - August 2020 for each company by scraping yahoo finance. More specifically, for each of the S&amp;P500 tickers, we used the python package pandas_datareader to read those values from yahoo finance for the range of dates that we are interested in. We combined those dataframes and resulting in one large dataframe with the following columns: Date, Sybol, Adj.Close and Volume. Code can be found here data/preprocessing/sp500.ipynb. 3.1.3 VIX and Mcap We got both Vix and Market cap from Bloomberg Terminal. For Market cap we had to select the tickers we are interested since the raw file contained other companies which are not included in the S&amp;P500 list. The the volatility index was in ready-to-use format since it contained the index value by date. 3.1.4 Company characteristics We got both each companies characteristics from Bloomberg Terminal. Some characteristics that we are particularly interested in are Industry and Year_Founded. 3.1.5 Combination of the above We combined everything together in one dataframe. We performed an outer join on Date and Symbol which resulted in our final dataframe with the following columns: Date, Sybol, users_holding,Adj.Close, Volume, Mcap, vix_Adj_close. We also performed a few sanity checks such as making sure that we are only keeping the trading days between August 2018 - August 2020 and that for each date we have all tickers. Code can be found here: data/preprocessing/combine.ipynb 3.2 Further preprocessing We decided further combine and preprocessing all of the different dataframes in Python. 3.2.1 Clustering 3.2.1.1 Clustering on users_holding We measure a stock’s popularity by averaging amount of user’s holding across 2018-2020. Intuitively a company with a high average stock holding will be a popular company among Robintrack’s users and vise verse. We want to find a way to separate the companies into three popularity groups. One way to do this is to split the data evenly across three sections. However, in our case, a few companies attract users a lot more than others and if we were to follow this approach we would end up with groups that are very uneven in terms of scale. In order to work around this issue,we assign each company to a popularity level by using K Means clustering(k=3) for the average user’s holding over those 3 years. The three popularity categories are; not_popular(n=473), normal(n=16) and very_popular(n=5). Note that this clustering results to uneven clusters as we would expect. Bellow is a visualization of the clusters produced by python. Therefore, we have defined the following popularity ranges: cluster 0: normal(n=16) cluster 1: not_popular(n=473) cluster 2: very_popular(n=5) 3.2.1.2 Clustering on Year_Founded: Following a similar line of thinking, we grouped the companies based on their Founded year. We wanted to avoid uneven groups in terms of founding years therefore we again used K Means clustering(k=3). For each group we recorded the minimum and maximum founding rate and used that as the as group’s label. More specifically the three founding ranges are;1784-1892(n=247),1894-1952(n=400), 1954-2019(n=798). Bellow is a visualization of the clusters produced by python. Founding Clusters Therefore, we have defined the following founded ranges: cluster 0: 1894-1952(n=400) cluster 1: 1784-1892(n=247) cluster 2: 1954-2019(n=798) Code can be found here: data/preprocessing/Results_preprocessing.ipynb. 3.3 Results dataframes Description of the final dataframes that we use in Results section 3.3.1 data.csv -Date: date -Symbol: a companies ticker -users_holding: number of users holding that stock on that date -Adj.Close: adjusted close price -Volume: traded volume -Mcap: market cap -vix_Adj_close: vix; market index -Symbol_industry: the industry of the company -popularity: either of not_popular, normal, very_popular 3.3.2 cleveland.csv -Year: year -Symbol: a companies ticker -avg_users_holding: average number of users holding that stock on that year 3.3.3 mosaic.csv -Symbol_industry: the industry -founded_range: the founding range as defined in the clustering section -popularity: the popularity level as defined in the clustering section -freq: how many times the above combination of values have appeared in the dataset Files can be found here data/results. "],["missing-values.html", "Chapter 4 Missing values 4.1 Overview of missing values 4.2 Visualizing missing values per row 4.3 Frequency of patterns 4.4 Interpreting the results 4.5 Dealing with missing values", " Chapter 4 Missing values In this section we will explore the missing values in our dataset and offer some hypotheses on why this might be happening. We will also investigate if we have missing patterns and try to understand the cause behind that. 4.1 Overview of missing values First we read in the raw data. We haven’t performed any tranformations to the dataframe apart from combining the different datasources. In order to start exploring missing values we will look at the ratio of the number of NAs in each column: ## Date Symbol Adj.Close Volume users_holding ## 0.000000000 0.000000000 0.003158734 0.003158734 0.062136036 ## vix_Adj_close Mcap ## 0.003112053 0.022546827 We can see immediately that we have a very low percentage in missing values. The columns in our dataframe that have the most missing entries are Mcap and users_holding with around 2% and 6% missing values respectively. 4.2 Visualizing missing values per row One way of visualizing the missing patterns by row is by using the mi package. For the purposes of the visualization of this section, we first drop all rows that do not have missing values. Since we have almost 21k missing values we randomly subsampled the missing values dataframe to create a smaller one. In order to get a first idea of the shape of the missing values we can take a look at the following graph: ## NOTE: The following pairs of variables appear to have the same missingness pattern. ## Please verify whether they are in fact logically distinct variables. ## [,1] [,2] ## [1,] &quot;Adj.Close&quot; &quot;Volume&quot; ## [2,] &quot;Adj.Close&quot; &quot;vix_Adj_close&quot; ## [3,] &quot;Volume&quot; &quot;vix_Adj_close&quot; We can see that most missing values appear on the users_holding and Mcap columns and a combination of the two. Another block of missing values is formed with the following collums Adj.Close,Volume,vix_Adj_close and users_holding. We realize that since this is a random sub-sample of the dataframe and that there might be more missing patterns. Nevertheless, the above graph captures the strongest missing-value trends. Taking a closer look on those patterns: ## NOTE: The following pairs of variables appear to have the same missingness pattern. ## Please verify whether they are in fact logically distinct variables. ## [,1] [,2] ## [1,] &quot;Adj.Close&quot; &quot;Volume&quot; ## Mcap ## 4702 ## users_holding ## 14079 ## users_holding, Mcap ## 1094 ## Adj.Close, Volume ## 12 ## Adj.Close, Volume, users_holding, vix_Adj_close ## 800 To summarize the above: We can see standalone missing values for users_holding and Mcap with the highest counts. There is a pattern when both users_holding and Mcap are missing. Another pattern lies in missing Adj.Close and Volume. The last pattern we observe is missing all of the following: Adj.Close, Volume, users_holding,vix_Adj_close. 4.3 Frequency of patterns We take another look at our missing patterns. Here, the rows represent a pattern and the columns represent the column level missing values. We have sorted the graph by most to least common missing pattern and the most to least common missing row. 4.4 Interpreting the results Pattern 1: Missing users_holding: In our opinion there is not really intuition on why users_holding is missing. We assume that the Robintrack didn’t report this variable on certain days.We assume that this value is missing completely at Random. Pattern 2: Missing Mcap: Similarly for Mcap. We assume that it is missing completely at Random. Pattern 3: Missing Mcapand users_holding: A combination of the above two explanations. Pattern 4: Missing Adj.Close, Volume, users_holding andvix_Adj_close: This is a more meaningful pattern. Our hypothesis is that those entries are missing at the same time because the company was not part of the S&amp;P500 on those specific dates. Note we still have Mcap data because that is pulled from Bloomberg versus Yahoo Finance. Bloomberg can recognize a name change of ticker whereas Yahoo does not. Pattern 5: Missing Adj.Close and Volume: Our assumption is that Yahoo Finance didn’t report these values. We have values for the VIX, Market Cap and users holding therefore we should also have values for Adj.Close and Volume. We confirmed our assumption by comparing those missing dates against another source which had the correct values for those dates. 4.5 Dealing with missing values We decided to remove the rows that contained missing values. "],["results.html", "Chapter 5 Results 5.1 Important terms 5.2 Yearly average ownership by industry 5.3 Ownership by company 5.4 Ownership of the very_popular companies 5.5 Ownership vs Founding Year", " Chapter 5 Results The main focus of our analysis will examine Robintrack’s users stock holding of the S&amp;P500 companies between August 2018 - August 2020. We will explore how price, market cap, industry and founding year affect user’s holding. 5.1 Important terms 5.2 Yearly average ownership by industry The first transformed dataframe the average user’s stock holding per industry for 2018, 2019 and 2020. In order explore the shifts in the most popular industries between 2018-2020, we have created a Clevland plot for which we have sorted the y axis in descending order for the users holding on 2020. Some insights that we can extract from the above plot are: We can see a jump in users holding for across all industries between 2018/2019 and 2020. A possible explanation is that retail trading has taken off in 2020 amid the coronavirus downturn that many young traders saw as an entry point into the world of investing. This jump is especially evident in the following industries;Comunication Services, Consumer Discretionary,Industrials and Energy. The largest jump in user’s holding between 2019 and 2020 was in the Consumer Discretionary industry. A possible explanation could be the increased interest of the Amazon (AMZN) stock during the pandemic. Even though Information Technology industry had the second highest average user’s holding in 2018 and 2019, in 2020 it dropped to 4th place. Similarly in 2018 &amp; 2019 Energy industry was less attractive than Consumer Staples. However, in 2020 Energy attracted more stock holders. `` Another evident trend is that Utilities, Materials and Real Estate has similar average user’s holding between 2018 and 2019. On the other hand the rest of the industried have experienced and increase in user’s holding between these two years. Moreover, Consumer Staples and Industrials industries have almost the same stock holding between 2018 and 2019. That trend was broken in 2020 when Industrials almost tripled in user’s holding compared to Consumer Staples. 5.3 Ownership by company In this subsection, we dig deeper to see if there are any pattern at the individual company level. We created a Cleveland dot plot to show the average number of account owners across all the companies in the S&amp;P500. In order to clearly show all 500 companes within the S&amp;P500, we plotted five Cleveland dot plots of 100 companies each in descending order by average account ownership over the time period with the same x-axis scale for ease of comparison. We can quickly see from these 5 graphs that the majority of the stocks are “not popular” which means there are few accounts who own this stock. There are only a handful of stocks that have considerably higher number of accounts who own the stocks. Based on this observation, we divide the companies into three categories: very popular, normally popular, and not popular with details noted in the Data Transformation section. In the subsequent data exploration, we focus our attention on the “very popular” category given there are much greater investor attention on these companies. We first take a look at companies within the most popular category. ## [1] &quot;F&quot; &quot;GE&quot; &quot;AAPL&quot; &quot;MSFT&quot; &quot;DIS&quot; The top five most popular (by average number of account owners) companies are F (Ford Motors Vehicle), GE (General Electric Company), AAPL (Apple), MSFT (Microsoft), and DIS (Disney). Unsurprisingly these are well-established companies that most households know. This is consistent with intuition that the most investors using the Robinhood app are retail investors so would invest in stable, well-known companies. ## [1] &quot;AMD&quot; &quot;FB&quot; &quot;BAC&quot; &quot;AMZN&quot; &quot;TWTR&quot; &quot;NFLX&quot; &quot;AAL&quot; &quot;DAL&quot; &quot;NVDA&quot; &quot;SBUX&quot; ## [11] &quot;T&quot; &quot;CCL&quot; &quot;BA&quot; &quot;KO&quot; &quot;MU&quot; &quot;NCLH&quot; In the second tier of “normal”(ly) popular companies are AMD (Advanced Micro Devices), FB (Facebook), BAC (Bank of America), AMZN (Amazon), TWTR (Twitter), NFLX (Netflix), AAL (American Airline), DAL (Delta Airline), DAL (Nvidia), SBUX (Starbucks), T (AT&amp;T), Carnival, Boeing, Coca-Cola, Micron Technology, and Norwegian Cruise Line. Well most of these companies are also well-established companies, these are additional intuition supporting relatively higher account ownership behind these stocks. Many of these companies were heavily impacted by the pandemic and received intense investor attention in the post-COVID financial market. Travel-related companies such as American Airline, Delta Airline, and Boeing as well as leisure-related companies including Carnival and Norwegian Cruise line had businesses that were negatively impacted by the restriction imposed during the pandemic. This led to their stock prices to plummet considerably. Retail investors perhaps saw this as an opportunity to “buy the dip” and increase account ownership for these companies. Another trend we see is the prevalence of tech companies that are positively impacted by the work-from-home dynamic in the post-COVID world. Companies such as Advanced Micro Devices and Nvidia produce computing chips and systems for mobile computing As we shall see later in our data exploration, Robinhood saw a significant increase in new accounts and investing activity post March 2020, further supporting the intuition that companies that were heavily impacted by the pandemic would see heightened attention. 5.4 Ownership of the very_popular companies To better understand the distribution shape of the individual account ownership, we first looked at the histogram of the top 5 companies’ ownership distribution. Looking at the individual account ownership of the top 5 most popular companies, we can see that they are all right skewed distribution. There is one peak with high frequency for &lt;= 250k account owners. For companies like Disney, Ford, and General Electric there is a second peak near the highest number of accounts (750k-1mm) but that peak is much smaller the first at the lower end. This makes intuitive sense as the second peak of high number of accounts would result in an elevated average account ownership putting in on the most popular list. The more popular companies (such as F and GE) tend to have wider min-to-max ranges than the less popular ones. Next, we use boxplots to show the distribution of account ownership of the individual stocks within the most popular category. The circle denotes the mean for comparison with the quartiles. Looking at the boxplots, it is evident that there are considerably number of outliers across all 5 companies. Almost all of the outliers are skewed toward the high end which would increase the average account ownership across the time period. With the exception of MSFT, the mean across the remaining 4 companies seems to be near or above the upper hinge. APPL stands out with a much smaller H-spread compared to the other companies suggesting that the number of accounts who owned Apple is concentrated around just below the 250k mark. Within the H-spread, the length to the lower hinge and upper hinge look to be relatively symmetric. As we tried to examine any patterns regarding outliers, we used time series line graphs to introduce time as another variable. By looking how the daily number of account owners for a particular stock changed over time, we can easily see a significant increase around the March-April 2020 timeframe. Visually we can see that all of the outliers at significantly large number of account owners are during the later end of the available dataset near summer 2020. This is consistent with what we observed in the boxplot and histogram where for the majority of time period (from Aug 2018 to March 2020), the daily number of account owners was relatively stable within a tight range. Next, we plot the stock prices of the top 5 most popular companies to see if there’s any relationship between the stock price and number of account owners. We also looked at the market capitalization of these 5 companies. The market capitalization measures the size of the company’s outstanding equity value. It is calculated by stock price multiplied by the number of shares outstanding. Since stock price level is an input in the market capitalization, it is unsurprisingly that the daily market cap of the companies follow a similar shape to the stock price. In this graph, Apple has a higher market cap than Microsoft despite Microsoft having a higher stock price. This trend is not statistically meaningful because Microsoft simply has lower number of shares outstanding. From the graphs, we can see that across all 5 companies, the stock price took a hit in March 2020 coinciding with the onset of the pandemic in the US. After the initial drop in price, the stock prices slowly increased back up. It is not consistent whether the stock prices increased back to the pre-pandemic level. One theory for this behavior is that investors using Robinhood took the opportunity to buy stocks when the price was low. Since these 5 companies are well established companies that are unlikely to be negatively impacted by the pandemic, investors increased their ownership of these stocks. They continued to buy these stocks as the stock prices continue to rise as a positive feedback loop to the positive returns on their investments. Lastly, we looked at the VIX index which measure the market-implied pricing for markets volatility. It is an industry standard metric that indicates investor’s expectation for uncertainty with a higher number corresponding to higher volatility. We see that the VIX spiked significantly during the March-April 2020 timeframe corresponding to when we saw a drop in stock price. Since the VIX is an indicator across the broader S&amp;P500 index, it suggests that the outsized stock price movement was not limited to just the top 5 companies that we looked at. It further validates our original intuition that there is a trend of Robinhood investors taking advantage of the market uncertainty in March/April 2020 to buy certain well-established companies. By buying in well known companies with limited adverse impact from COVID-19, the investors can invest their money in a relatively safe stock that preserve capital and buy at a lower price with the hope that the stock returns back to previous levels. The continuation of higher account owners may be both attributed to higher overall accounts on Robinhood as well as positive feedback from subsequent stock performance. 5.5 Ownership vs Founding Year As mentioned in the data transformation section, we measure a stock’s popularity by averaging amount of user’s holding acrross 2018-2020. We assign each company to a popularilty group by using KMeans clustering(k=3) for the avergage user’s holding over those 3 years. The three popularity categories are; not_popular(n=473), normal(n=16) and very_popular(n=5). Moreover, as mentioned in the transformation section, we have also split the companies in three fouding dates ranges. We again used KMeans clustering(k=3) in order to group the S&amp;P500 companies in three age groups for which we recorded the minimum and maximum founding rate in each group as their label. More specifically the three founding ranges are;1784-1892(n=247),1894-1952(n=400), 1954-2019(n=798). In the above mosaic plot we can see that there is a correlation between the age of a company and its popularity. More specifically: We can see that for the less popular companies there is an equal amount of observations across all three founding ranges. When comparing the normal and the less popular companies we can see an increase in popularity as the founding date becomes more recent. Moreover, even though the oldest copanies are the ones that appear the least across the very popular companies, we can see that the medium founding range companies (1894-1952) are the the most across the very_popular. We would have been able to identify a positive correlation between how recently a company was founded and how popular the company is amongst Robinhood users. However this trend is broken in the very_popular companies. A possible explanation of the partial positive correlation between founding year and popularity could due to the fact that Robinhood’s average customer is young2 and therefore is more aware of the more recently founded companies. According to this article↩ "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component We created an interactive bar graph that displays the yearly average ownership of the top 21 most popular stocks between August 2018 - August 2020. You can select the year to display the corresponding average ownership of that year. While the graph originally displays the top 21 most popular stocks in order of descending popularity over the entire time horizon, you can toggle a “Sort Companies” option that will sort the companies in order of popularity of that specific year. This allows the user to see how popularity of these companies compare in a specific year relatively to the popularity over the entire time horizon. We use the link http://plnkr.co/edit/BMjxu8bzhu9WR9gtZwDS?p=preview&amp;preview as reference template to help build our graph. Looking at the interactive graph, we can see that stocks in COVID-sensitive industries had little interest until 2020. "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "]]
